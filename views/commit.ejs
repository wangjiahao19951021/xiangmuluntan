<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/index.css' />
    <link rel="stylesheet" href="/stylesheets/bootstrap.min.css">
    <link rel="stylesheet" href="/stylesheets/common.css">
    <link rel="stylesheet" href="/stylesheets/message.css">
  </head>
  <body>
    <!-- 使用富文本编辑器 http://www.wangeditor.com/ -->
    <!-- <!-- =普通输出 - -输出-> -->
    <%- include("./header/header.ejs") %>
    
    <section class="container">
      <p>
        <a href="/">回到首页</a>
        <a href="/commitlist">查看列表</a>
      </p>

      <form id='form' style="margin-top: 20px;">
        <div class="form-group classify">
            <label for="">类型：</label>
            <!-- 使用服务端渲染 -->
            <!-- 渲染类型的按钮 -->
            <!-- <button class="btn btn-primary" type="button">技术</button> -->
            <!-- <button class="btn btn-default" type="button">情感</button> -->
            <% classify.forEach((item, i) => { %>
              <button class="btn btn-<%= i === 0 ? 'primary' : 'default' %>" type="button" data-id="<%= item._id %>" data-type="<%= item.type %>"><%= item.title %></button>
            <% }) %>
        </div>
        <div class="form-group">
          <label for="">标题：</label>
          <input type="text" class="form-control" id="title">
        </div>
        <div class="form-group">
            <label for="">内容：</label>
            <!-- <textarea class="form-control" rows="15" style="resize: none" id="content"></textarea> -->
            <!-- 使用富文本编辑器 -->
            <div id="content">
        
            </div>
        </div>
        <div class="form-group">
            <button type='submit' class="btn btn-success">发布</button>
            <button type='reset' class="btn btn-default">重置</button>
        </div>
      </form>
    </section>
    

    
  </body>
  <script src="/javascripts/jquery.min.js"></script>
  <!-- 引入富文本编辑器 js -->
  <script src="/wangeditor/wangEditor.min.js"></script>  
  <script src="/javascripts/jquery-cookie.js"></script>
  <script src="/javascripts/message.min.js"></script>
  <script src="/javascripts/bootstrap.min.js"></script>
  <script>

    // 此处使用了自执行函数 因为上面有相同的名字 同时此处不污染全局
    (function ($) {

      let classify_item = {
        type: $(".classify .btn").eq(0).attr("data-type"),
        id: $(".classify .btn").eq(0).data('id')
      }
      addEvent ()


      // 使用富文本编辑器 实例化

      //editor的构造器
      var E = window.wangEditor
      //实例化实例
      var editor = new E('#content')
      
      editor.customConfig.uploadImgServer = '/api/v1/upload_content_img'  // 设置上传图片，且设置上传图片的路径
      // editor.customConfig.uploadImgShowBase64 = true   // 使用 base64 保存图片 变为base64编码

      //上传图片的时候给字段起的名字
      editor.customConfig.uploadFileName = 'wangEditor_uploadImg'

      // 将图片大小限制为 3M
      editor.customConfig.uploadImgMaxSize = 3 * 1024 * 1024

      //上传图片的监听函数
      editor.customConfig.uploadImgHooks = {
          //当成功的时候
          success: function (xhr, editor, result) {
              editor.txt.append('<img src="'+result.imgurl+'"/>')
          }
      }
      // 自定义菜单配置
      editor.customConfig.menus = [
        'head',  // 标题
        'bold',  // 粗体
        'fontSize',  // 字号
        'fontName',  // 字体
        'italic',  // 斜体
        'underline',  // 下划线
        'strikeThrough',  // 删除线
        'foreColor',  // 文字颜色
        'backColor',  // 背景颜色
        'link',  // 插入链接
        'list',  // 列表
        'justify',  // 对齐方式
        'quote',  // 引用
        'emoticon',  // 表情
        'image',  // 插入图片
        'table',  // 表格
        // 'video',  // 插入视频
        // 'code',  // 插入代码
        'undo',  // 撤销
        'redo'  // 重复
      ]

      //生成富文本编辑器
      editor.create()


      $("#form").submit(commit);

      function commit (e){
        // 阻止表单默认提交
        e.preventDefault();

        let userinfo = checkLogin();
        if (!userinfo) {
          return false
        }

        let title = $("#title").val();
        // 获取富文本编辑器的内容 使用html   editor.txt.html()
        // let content = $("#content").val();
        let content = editor.txt.html();

        // console.log(content)
        
        // 提交内容
        $.ajax({
          url: '/api/v1/commit',
          type: 'POST',
          data: {
            title: title,
            content: content,
            author_id: userinfo._id,
            author_nick: userinfo.nickname,
            type: classify_item.type,
            classid: classify_item.id
          },
          success: function (results) {
            let type = ''
            let message = ''
            if (results.err === 500) {
              type = "danger"
              message = '服务器错误，发布失败'
            } else {
              type = "success"
              message = '发布成功'
            }
            $.message({
              type,
              message
            })
            setTimeout(() => {
              $("#title").val('')
              editor.txt.html('')
            }, 2000)
          }
        })
      }

      // 判断是否登录
      function checkLogin () {
        let userinfo = JSON.parse($.cookie('userinfo') || '{}')
        if (!userinfo._id) {
          $.message({
            message: '请登录后操作',
            type: "warning",
            time: 1000
          })
          setTimeout(() => {
            window.location.href = '/login'
          }, 2000)
          return false;
        } else {
          return userinfo
        }
      }

      function addEvent () {
        // delegate() 方法为指定的元素（属于被选元素的子元素）添加一个或多个事件处理程序，并规定当这些事件发生时运行的函数。使用 delegate() 方法的事件处理程序适用于当前或未来的元素（比如由脚本创建的新元素）。
        $(".classify").delegate(".btn", 'click', function () {
          // 如果等于当前元素
          if (classify_item.type === $(this).attr('data-type')) {
            return false
          } else {
            classify_item.type = $(this).attr('data-type')
            classify_item.id = $(this).attr('data-id')
            //修改样式
            $(this).addClass("btn-primary").removeClass("btn-default").siblings().addClass("btn-default").removeClass('btn-primary')
          } 
        })
      }

      // 清空
      $(".form-group button[type=reset]").click(() => {
        editor.txt.html('') 
      })

    })($)
  </script>
</html>
